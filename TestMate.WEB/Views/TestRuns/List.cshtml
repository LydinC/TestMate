@model IEnumerable<TestMate.Common.Models.TestRuns.TestRun>
@using TestMate.Common.Enums;

@{
    ViewData["Title"] = "Test Runs";
}

<h1>Test Runs List</h1>

<br />
<div>
    @if(Model.FirstOrDefault() != null)
    {
        <h4>Generic Details</h4>
        <hr />
        <div>
            <strong>TestRequestID:</strong>
            <span>@Model.FirstOrDefault()?.TestRequestID</span>
        </div>
        <br />
        <div>
            <strong>ApkPath:</strong>
            <span>@Model.FirstOrDefault()?.ApkPath</span>
        </div>
        <br />
        <div>
            <strong>TestExecutablePath:</strong>
            <span>@Model.FirstOrDefault()?.TestExecutablePath</span>
        </div>
    }
</div>

<hr />
<br />


<h4>Run Details</h4>
<br />
<div>
    <button onclick="refreshData()">Refresh Data</button>
</div>
<br />

<table class="table" id="tbl_run_details">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeviceFilter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContextConfiguration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PriorityLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Result)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RetryCount)
            </th>
            <th>Results</th>
            <th>Download</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceFilter)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContextConfiguration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PriorityLevel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Result)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetryCount)
                </td>

                @if(item.Status == TestRunStatus.Completed)
                {
                    <td>
                      <div style="display: inline-block; transform: scale(0.9);">
                        @Html.ActionLink("HTML", "BasicHTMLReport", "TestRuns", new { Id = item.Id }, new { @class = "btn btn-primary" })
                      </div>
                      <div style="display: inline-block; transform: scale(0.9);">
                        @Html.ActionLink("NUnit", "NUnitReport", "TestRuns", new { Id = item.Id }, new { @class = "btn btn-primary" })
                      </div>
                    </td>
                    <td>
                        <div style="display: inline-block; transform: scale(0.9);">
                            @Html.ActionLink("Download", "Download", "TestRuns", new { Id = item.Id }, new { @class = "btn btn-primary" })
                        </div>
                    </td>
                } 
                else
                {
                    <td>
                        N/A
                    </td>
                    <td>
                        N/A
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<script>
    function refreshData() {
        window.location.reload();
    }
</script>